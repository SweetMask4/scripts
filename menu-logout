#!/usr/bin/env bash

# Exit if any command fails, if any undefined variable is used, or if a pipeline fails
set -euo pipefail

# Source the helper script
# shellcheck disable=SC1090
. ~/scripts/_menu-helper.sh || exit 1

_out="echo"
if [[ ${TERM} == 'dumb' ]]; then
    _out="notify-send"
fi

output(){
    ${_out} "power-menu" "$@"
}

warning(){
  if [ -f /var/lib/pacman/db.lock ]; then
    ${_out} "pacman is running wait for it to finish"
  fi

  if pgrep -x "pacman" > /dev/null; then
    ${_out} "System is updating. Cannot shut down, reboot or log out right now." 
    exit 1
  fi
}

desktop(){
  case "$XDG_SESSION_TYPE" in
    'x11') grep "Name=" /usr/share/xsessions/*.desktop | cut -d'=' -f2;;
    'wayland') grep "Name=" /usr/share/wayland-sessions/*.desktop | cut -d'=' -f2 || grep "Name=" /usr/share/xsessions/*.desktop | grep -i "wayland" | cut -d'=' -f2 | cut -d' ' -f1;; 
    *) err "Unknown display server";;
  esac
}

main() {
    # An array of options to choose.
    declare -a options=(
    " Lock screen"
    " Logout"
    " Reboot"
    " Shutdown"
    " Suspend"
    "Quit"
    ) 
    declare -a MANAGERS
    while IFS= read -r manager
    do
        MANAGERS+=("${manager,,}")
    done < <(desktop)

    choice=$(printf '%s\n' "${options[@]}" | ${LAUNCHER} ' Shutdown menu:' "${@}")
    # What to do when/if we choose one of the options.
    case $choice in
        ' Logout')
                if [[ "$(echo -e "No\nYes" | ${LAUNCHER} "${choice}?" "${@}" )" == "Yes" ]]; then
                warning
                for manager in "${MANAGERS[@]}"; do 
                killall "${manager}" || output "Process ${manager} was not running."
                done
            else
                output "User chose not to logout." && exit 1
            fi
            ;;
        ' Lock screen')
          warning
          ${logout_locker}
            ;;
        ' Reboot')
            if [[ "$(echo -e "No\nYes" | ${LAUNCHER} "${choice}?" "${@}" )" == "Yes" ]]; then
                warning
                systemctl reboot
            else
                output "User chose not to reboot." && exit 0
            fi
            ;;
        ' Shutdown')
            if [[ "$(echo -e "No\nYes" | ${LAUNCHER} "${choice}?" "${@}" )" == "Yes" ]]; then
                warning
                systemctl poweroff
            else
                output "User chose not to shutdown." && exit 0
            fi
            ;;
        ' Suspend')
            if [[ "$(echo -e "No\nYes" | ${LAUNCHER} "${choice}?" "${@}" )" == "Yes" ]]; then
                warning
                systemctl suspend
            else
                output "User chose not to suspend." && exit 0
            fi
            ;;
        'Quit')
            output "Program terminated." && exit 0
        ;;
        # It is a common practice to use the wildcard asterisk symbol (*) as a final
        # pattern to define the default case. This pattern will always match.
        *)
            exit 0
        ;;
    esac

}
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
