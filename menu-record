#!/usr/bin/env bash

# Exit if any command fails, if any undefined variable is used, or if a pipeline fails
set -euo pipefail

# Source the helper script
# shellcheck disable=SC1090
. ~/scripts/_menu-helper.sh || exit 1

VIDEO="$HOME/Videos/recording"
[ ! -d "$VIDEO" ] && mkdir "$VIDEO"

_video_size="$(xwininfo -root | awk '/geometry/ {print $2}' | sed 's/[+-].*//')"

killrecording() {
	recpid="$(</tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 3
	kill -9 "$recpid"
	notify-send "Recording has been stopped"
	exit 0
}

screencast() {
	ffmpeg -nostdin -threads 0 -y \
		-f x11grab \
		-r 15 \
		-video_size "$_video_size" \
		-i "$DISPLAY" \
		-f pulse -i default \
		-c:v h264 -crf 0 -preset ultrafast -c:a aac \
		"$VIDEO/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! >/tmp/recordingpid
	notify-send "Screencast recording has started"
}

video() {
	ffmpeg -nostdin -threads 0 -y \
		-f x11grab \
		-video_size "$_video_size" \
		-i "$DISPLAY" \
		-r 15 \
		-c:v h264 -crf 0 -preset ultrafast -c:a aac \
		"$VIDEO/video-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	notify-send "Video recording has started"
}

webcamhidef() {
	ffmpeg \
		-f v4l2 \
		-i /dev/video0 \
		-video_size 1920x1080 \
		"$VIDEO/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	notify-send "Webcam recording (hi-def) has started"
}

webcam() {
	ffmpeg \
		-f v4l2 \
		-i /dev/video0 \
		-video_size 640x480 \
		"$VIDEO/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	notify-send "Webcam recording has started"
}

audio() {
	ffmpeg \
		-f alsa -i default \
		-f flac \
		"$VIDEO/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! >/tmp/recordingpid
	notify-send "Audio recording has started"
}

asktoend() {
	response=$(printf "No\\nYes" | ${LAUNCHER} "Recording still active. End recording?") &&
		[ "$response" = "Yes" ] && killrecording
}

videoselected() {

	readarray -t coords < <(slop -f "%x %y %w %h")
	read -r X Y W H <<<"${coords[0]}"

	ffmpeg \
		-f x11grab \
		-framerate 60 \
		-video_size "$W"x"$H" \
		-i :0.0+"$X,$Y" \
		-c:v libx264 -qp 0 -r 30 \
		"$VIDEO/box-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	notify-send "videoselected recording has started"
}

main() {
	choice=$(echo -e " screencast\n audio\n video\n󰊓 videoselected\n󰖠 webcam\n󰖠 webcamhidef\n󰿅 killrecording" | ${LAUNCHER} '󰹑 options for recording')
	case "$choice" in
		' screencast') screencast ;;
		' audio') audio ;;
		' video') video ;;
		'󰊓 videoselected') videoselected ;;
		'󰖠 webcam') webcam ;;
		'󰖠 webcamhidef') webcamhidef ;;
		'󰿅 killrecording') killrecording ;;
		*) ([ -f /tmp/recordingpid ] && asktoend && exit) || maim ;;
	esac
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
